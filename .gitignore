{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang19 # Created by {{\field{\*\fldinst{HYPERLINK https://www.toptal.com/developers/gitignore/api/react,csharp,visualstudio,visualstudiocode,node }}{\fldrslt{https://www.toptal.com/developers/gitignore/api/react,csharp,visualstudio,visualstudiocode,node\ul0\cf0}}}}\f0\fs22\par
# Edit at {{\field{\*\fldinst{HYPERLINK https://www.toptal.com/developers/gitignore?templates=react,csharp,visualstudio,visualstudiocode,node }}{\fldrslt{https://www.toptal.com/developers/gitignore?templates=react,csharp,visualstudio,visualstudiocode,node\ul0\cf0}}}}\f0\fs22\par
\par
### Csharp ###\par
## Ignore Visual Studio temporary files, build results, and\par
## files generated by popular Visual Studio add-ons.\par
##\par
## Get latest from {{\field{\*\fldinst{HYPERLINK https://github.com/github/gitignore/blob/main/VisualStudio.gitignore }}{\fldrslt{https://github.com/github/gitignore/blob/main/VisualStudio.gitignore\ul0\cf0}}}}\f0\fs22\par
\par
# User-specific files\par
*.rsuser\par
*.suo\par
*.user\par
*.userosscache\par
*.sln.docstates\par
\par
# User-specific files (MonoDevelop/Xamarin Studio)\par
*.userprefs\par
\par
# Mono auto generated files\par
mono_crash.*\par
\par
# Build results\par
[Dd]ebug/\par
[Dd]ebugPublic/\par
[Rr]elease/\par
[Rr]eleases/\par
x64/\par
x86/\par
[Ww][Ii][Nn]32/\par
[Aa][Rr][Mm]/\par
[Aa][Rr][Mm]64/\par
bld/\par
[Bb]in/\par
[Oo]bj/\par
[Ll]og/\par
[Ll]ogs/\par
\par
# Visual Studio 2015/2017 cache/options directory\par
.vs/\par
# Uncomment if you have tasks that create the project's static files in wwwroot\par
#wwwroot/\par
\par
# Visual Studio 2017 auto generated files\par
Generated\\ Files/\par
\par
# MSTest test Results\par
[Tt]est[Rr]esult*/\par
[Bb]uild[Ll]og.*\par
\par
# NUnit\par
*.VisualState.xml\par
TestResult.xml\par
nunit-*.xml\par
\par
# Build Results of an ATL Project\par
[Dd]ebugPS/\par
[Rr]eleasePS/\par
dlldata.c\par
\par
# Benchmark Results\par
BenchmarkDotNet.Artifacts/\par
\par
# .NET Core\par
project.lock.json\par
project.fragment.lock.json\par
artifacts/\par
\par
# ASP.NET Scaffolding\par
ScaffoldingReadMe.txt\par
\par
# StyleCop\par
StyleCopReport.xml\par
\par
# Files built by Visual Studio\par
*_i.c\par
*_p.c\par
*_h.h\par
*.ilk\par
*.meta\par
*.obj\par
*.iobj\par
*.pch\par
*.pdb\par
*.ipdb\par
*.pgc\par
*.pgd\par
*.rsp\par
*.sbr\par
*.tlb\par
*.tli\par
*.tlh\par
*.tmp\par
*.tmp_proj\par
*_wpftmp.csproj\par
*.log\par
*.tlog\par
*.vspscc\par
*.vssscc\par
.builds\par
*.pidb\par
*.svclog\par
*.scc\par
\par
# Chutzpah Test files\par
_Chutzpah*\par
\par
# Visual C++ cache files\par
ipch/\par
*.aps\par
*.ncb\par
*.opendb\par
*.opensdf\par
*.sdf\par
*.cachefile\par
*.VC.db\par
*.VC.VC.opendb\par
\par
# Visual Studio profiler\par
*.psess\par
*.vsp\par
*.vspx\par
*.sap\par
\par
# Visual Studio Trace Files\par
*.e2e\par
\par
# TFS 2012 Local Workspace\par
$tf/\par
\par
# Guidance Automation Toolkit\par
*.gpState\par
\par
# ReSharper is a .NET coding add-in\par
_ReSharper*/\par
*.[Rr]e[Ss]harper\par
*.DotSettings.user\par
\par
# TeamCity is a build add-in\par
_TeamCity*\par
\par
# DotCover is a Code Coverage Tool\par
*.dotCover\par
\par
# AxoCover is a Code Coverage Tool\par
.axoCover/*\par
!.axoCover/settings.json\par
\par
# Coverlet is a free, cross platform Code Coverage Tool\par
coverage*.json\par
coverage*.xml\par
coverage*.info\par
\par
# Visual Studio code coverage results\par
*.coverage\par
*.coveragexml\par
\par
# NCrunch\par
_NCrunch_*\par
.*crunch*.local.xml\par
nCrunchTemp_*\par
\par
# MightyMoose\par
*.mm.*\par
AutoTest.Net/\par
\par
# Web workbench (sass)\par
.sass-cache/\par
\par
# Installshield output folder\par
[Ee]xpress/\par
\par
# DocProject is a documentation generator add-in\par
DocProject/buildhelp/\par
DocProject/Help/*.HxT\par
DocProject/Help/*.HxC\par
DocProject/Help/*.hhc\par
DocProject/Help/*.hhk\par
DocProject/Help/*.hhp\par
DocProject/Help/Html2\par
DocProject/Help/html\par
\par
# Click-Once directory\par
publish/\par
\par
# Publish Web Output\par
*.[Pp]ublish.xml\par
*.azurePubxml\par
# Note: Comment the next line if you want to checkin your web deploy settings,\par
# but database connection strings (with potential passwords) will be unencrypted\par
*.pubxml\par
*.publishproj\par
\par
# Microsoft Azure Web App publish settings. Comment the next line if you want to\par
# checkin your Azure Web App publish settings, but sensitive information contained\par
# in these scripts will be unencrypted\par
PublishScripts/\par
\par
# NuGet Packages\par
*.nupkg\par
# NuGet Symbol Packages\par
*.snupkg\par
# The packages folder can be ignored because of Package Restore\par
**/[Pp]ackages/*\par
# except build/, which is used as an MSBuild target.\par
!**/[Pp]ackages/build/\par
# Uncomment if necessary however generally it will be regenerated when needed\par
#!**/[Pp]ackages/repositories.config\par
# NuGet v3's project.json files produces more ignorable files\par
*.nuget.props\par
*.nuget.targets\par
\par
# Microsoft Azure Build Output\par
csx/\par
*.build.csdef\par
\par
# Microsoft Azure Emulator\par
ecf/\par
rcf/\par
\par
# Windows Store app package directories and files\par
AppPackages/\par
BundleArtifacts/\par
Package.StoreAssociation.xml\par
_pkginfo.txt\par
*.appx\par
*.appxbundle\par
*.appxupload\par
\par
# Visual Studio cache files\par
# files ending in .cache can be ignored\par
*.[Cc]ache\par
# but keep track of directories ending in .cache\par
!?*.[Cc]ache/\par
\par
# Others\par
ClientBin/\par
~$*\par
*~\par
*.dbmdl\par
*.dbproj.schemaview\par
*.jfm\par
*.pfx\par
*.publishsettings\par
orleans.codegen.cs\par
\par
# Including strong name files can present a security risk\par
# ({{\field{\*\fldinst{HYPERLINK https://github.com/github/gitignore/pull/2483#issue-259490424 }}{\fldrslt{https://github.com/github/gitignore/pull/2483#issue-259490424\ul0\cf0}}}}\f0\fs22 )\par
#*.snk\par
\par
# Since there are multiple workflows, uncomment next line to ignore bower_components\par
# ({{\field{\*\fldinst{HYPERLINK https://github.com/github/gitignore/pull/1529#issuecomment-104372622 }}{\fldrslt{https://github.com/github/gitignore/pull/1529#issuecomment-104372622\ul0\cf0}}}}\f0\fs22 )\par
#bower_components/\par
\par
# RIA/Silverlight projects\par
Generated_Code/\par
\par
# Backup & report files from converting an old project file\par
# to a newer Visual Studio version. Backup files are not needed,\par
# because we have git ;-)\par
_UpgradeReport_Files/\par
Backup*/\par
UpgradeLog*.XML\par
UpgradeLog*.htm\par
ServiceFabricBackup/\par
*.rptproj.bak\par
\par
# SQL Server files\par
*.mdf\par
*.ldf\par
*.ndf\par
\par
# Business Intelligence projects\par
*.rdl.data\par
*.bim.layout\par
*.bim_*.settings\par
*.rptproj.rsuser\par
*- [Bb]ackup.rdl\par
*- [Bb]ackup ([0-9]).rdl\par
*- [Bb]ackup ([0-9][0-9]).rdl\par
\par
# Microsoft Fakes\par
FakesAssemblies/\par
\par
# GhostDoc plugin setting file\par
*.GhostDoc.xml\par
\par
# Node.js Tools for Visual Studio\par
.ntvs_analysis.dat\par
node_modules/\par
\par
# Visual Studio 6 build log\par
*.plg\par
\par
# Visual Studio 6 workspace options file\par
*.opt\par
\par
# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\par
*.vbw\par
\par
# Visual Studio 6 auto-generated project file (contains which files were open etc.)\par
*.vbp\par
\par
# Visual Studio 6 workspace and project file (working project files containing files to include in project)\par
*.dsw\par
*.dsp\par
\par
# Visual Studio 6 technical files\par
\par
# Visual Studio LightSwitch build output\par
**/*.HTMLClient/GeneratedArtifacts\par
**/*.DesktopClient/GeneratedArtifacts\par
**/*.DesktopClient/ModelManifest.xml\par
**/*.Server/GeneratedArtifacts\par
**/*.Server/ModelManifest.xml\par
_Pvt_Extensions\par
\par
# Paket dependency manager\par
.paket/paket.exe\par
paket-files/\par
\par
# FAKE - F# Make\par
.fake/\par
\par
# CodeRush personal settings\par
.cr/personal\par
\par
# Python Tools for Visual Studio (PTVS)\par
__pycache__/\par
*.pyc\par
\par
# Cake - Uncomment if you are using it\par
# tools/**\par
# !tools/packages.config\par
\par
# Tabs Studio\par
*.tss\par
\par
# Telerik's JustMock configuration file\par
*.jmconfig\par
\par
# BizTalk build output\par
*.btp.cs\par
*.btm.cs\par
*.odx.cs\par
*.xsd.cs\par
\par
# OpenCover UI analysis results\par
OpenCover/\par
\par
# Azure Stream Analytics local run output\par
ASALocalRun/\par
\par
# MSBuild Binary and Structured Log\par
*.binlog\par
\par
# NVidia Nsight GPU debugger configuration file\par
*.nvuser\par
\par
# MFractors (Xamarin productivity tool) working folder\par
.mfractor/\par
\par
# Local History for Visual Studio\par
.localhistory/\par
\par
# Visual Studio History (VSHistory) files\par
.vshistory/\par
\par
# BeatPulse healthcheck temp database\par
healthchecksdb\par
\par
# Backup folder for Package Reference Convert tool in Visual Studio 2017\par
MigrationBackup/\par
\par
# Ionide (cross platform F# VS Code tools) working folder\par
.ionide/\par
\par
# Fody - auto-generated XML schema\par
FodyWeavers.xsd\par
\par
# VS Code files for those working on multiple tools\par
.vscode/*\par
!.vscode/settings.json\par
!.vscode/tasks.json\par
!.vscode/launch.json\par
!.vscode/extensions.json\par
*.code-workspace\par
\par
# Local History for Visual Studio Code\par
.history/\par
\par
# Windows Installer files from build outputs\par
*.cab\par
*.msi\par
*.msix\par
*.msm\par
*.msp\par
\par
# JetBrains Rider\par
*.sln.iml\par
\par
### Node ###\par
# Logs\par
logs\par
npm-debug.log*\par
yarn-debug.log*\par
yarn-error.log*\par
lerna-debug.log*\par
.pnpm-debug.log*\par
\par
# Diagnostic reports ({{\field{\*\fldinst{HYPERLINK https://nodejs.org/api/report.html }}{\fldrslt{https://nodejs.org/api/report.html\ul0\cf0}}}}\f0\fs22 )\par
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\par
\par
# Runtime data\par
pids\par
*.pid\par
*.seed\par
*.pid.lock\par
\par
# Directory for instrumented libs generated by jscoverage/JSCover\par
lib-cov\par
\par
# Coverage directory used by tools like istanbul\par
coverage\par
*.lcov\par
\par
# nyc test coverage\par
.nyc_output\par
\par
# Grunt intermediate storage ({{\field{\*\fldinst{HYPERLINK https://gruntjs.com/creating-plugins#storing-task-files }}{\fldrslt{https://gruntjs.com/creating-plugins#storing-task-files\ul0\cf0}}}}\f0\fs22 )\par
.grunt\par
\par
# Bower dependency directory ({{\field{\*\fldinst{HYPERLINK https://bower.io/ }}{\fldrslt{https://bower.io/\ul0\cf0}}}}\f0\fs22 )\par
bower_components\par
\par
# node-waf configuration\par
.lock-wscript\par
\par
# Compiled binary addons ({{\field{\*\fldinst{HYPERLINK https://nodejs.org/api/addons.html }}{\fldrslt{https://nodejs.org/api/addons.html\ul0\cf0}}}}\f0\fs22 )\par
build/Release\par
\par
# Dependency directories\par
jspm_packages/\par
\par
# Snowpack dependency directory ({{\field{\*\fldinst{HYPERLINK https://snowpack.dev/ }}{\fldrslt{https://snowpack.dev/\ul0\cf0}}}}\f0\fs22 )\par
web_modules/\par
\par
# TypeScript cache\par
*.tsbuildinfo\par
\par
# Optional npm cache directory\par
.npm\par
\par
# Optional eslint cache\par
.eslintcache\par
\par
# Optional stylelint cache\par
.stylelintcache\par
\par
# Microbundle cache\par
.rpt2_cache/\par
.rts2_cache_cjs/\par
.rts2_cache_es/\par
.rts2_cache_umd/\par
\par
# Optional REPL history\par
.node_repl_history\par
\par
# Output of 'npm pack'\par
*.tgz\par
\par
# Yarn Integrity file\par
.yarn-integrity\par
\par
# dotenv environment variable files\par
.env\par
.env.development.local\par
.env.test.local\par
.env.production.local\par
.env.local\par
\par
# parcel-bundler cache ({{\field{\*\fldinst{HYPERLINK https://parceljs.org/ }}{\fldrslt{https://parceljs.org/\ul0\cf0}}}}\f0\fs22 )\par
.cache\par
.parcel-cache\par
\par
# Next.js build output\par
.next\par
out\par
\par
# Nuxt.js build / generate output\par
.nuxt\par
dist\par
\par
# Gatsby files\par
.cache/\par
# Comment in the public line in if your project uses Gatsby and not Next.js\par
# {{\field{\*\fldinst{HYPERLINK https://nextjs.org/blog/next-9-1#public-directory-support }}{\fldrslt{https://nextjs.org/blog/next-9-1#public-directory-support\ul0\cf0}}}}\f0\fs22\par
# public\par
\par
# vuepress build output\par
.vuepress/dist\par
\par
# vuepress v2.x temp and cache directory\par
.temp\par
\par
# Docusaurus cache and generated files\par
.docusaurus\par
\par
# Serverless directories\par
.serverless/\par
\par
# FuseBox cache\par
.fusebox/\par
\par
# DynamoDB Local files\par
.dynamodb/\par
\par
# TernJS port file\par
.tern-port\par
\par
# Stores VSCode versions used for testing VSCode extensions\par
.vscode-test\par
\par
# yarn v2\par
.yarn/cache\par
.yarn/unplugged\par
.yarn/build-state.yml\par
.yarn/install-state.gz\par
.pnp.*\par
\par
### Node Patch ###\par
# Serverless Webpack directories\par
.webpack/\par
\par
# Optional stylelint cache\par
\par
# SvelteKit build / generate output\par
.svelte-kit\par
\par
### react ###\par
.DS_*\par
**/*.backup.*\par
**/*.back.*\par
\par
node_modules\par
\par
*.sublime*\par
\par
psd\par
thumb\par
sketch\par
\par
### VisualStudioCode ###\par
!.vscode/*.code-snippets\par
\par
# Local History for Visual Studio Code\par
\par
# Built Visual Studio Code Extensions\par
*.vsix\par
\par
### VisualStudioCode Patch ###\par
# Ignore all local history of files\par
.history\par
.ionide\par
\par
# Support for Project snippet scope\par
.vscode/*.code-snippets\par
\par
# Ignore code-workspaces\par
\par
### VisualStudio ###\par
\par
# User-specific files\par
\par
# User-specific files (MonoDevelop/Xamarin Studio)\par
\par
# Mono auto generated files\par
\par
# Build results\par
\par
# Visual Studio 2015/2017 cache/options directory\par
# Uncomment if you have tasks that create the project's static files in wwwroot\par
\par
# Visual Studio 2017 auto generated files\par
\par
# MSTest test Results\par
\par
# NUnit\par
\par
# Build Results of an ATL Project\par
\par
# Benchmark Results\par
\par
# .NET Core\par
\par
# ASP.NET Scaffolding\par
\par
# StyleCop\par
\par
# Files built by Visual Studio\par
\par
# Chutzpah Test files\par
\par
# Visual C++ cache files\par
\par
# Visual Studio profiler\par
\par
# Visual Studio Trace Files\par
\par
# TFS 2012 Local Workspace\par
\par
# Guidance Automation Toolkit\par
\par
# ReSharper is a .NET coding add-in\par
\par
# TeamCity is a build add-in\par
\par
# DotCover is a Code Coverage Tool\par
\par
# AxoCover is a Code Coverage Tool\par
\par
# Coverlet is a free, cross platform Code Coverage Tool\par
\par
# Visual Studio code coverage results\par
\par
# NCrunch\par
\par
# MightyMoose\par
\par
# Web workbench (sass)\par
\par
# Installshield output folder\par
\par
# DocProject is a documentation generator add-in\par
\par
# Click-Once directory\par
\par
# Publish Web Output\par
# Note: Comment the next line if you want to checkin your web deploy settings,\par
# but database connection strings (with potential passwords) will be unencrypted\par
\par
# Microsoft Azure Web App publish settings. Comment the next line if you want to\par
# checkin your Azure Web App publish settings, but sensitive information contained\par
# in these scripts will be unencrypted\par
\par
# NuGet Packages\par
# NuGet Symbol Packages\par
# The packages folder can be ignored because of Package Restore\par
# except build/, which is used as an MSBuild target.\par
# Uncomment if necessary however generally it will be regenerated when needed\par
# NuGet v3's project.json files produces more ignorable files\par
\par
# Microsoft Azure Build Output\par
\par
# Microsoft Azure Emulator\par
\par
# Windows Store app package directories and files\par
\par
# Visual Studio cache files\par
# files ending in .cache can be ignored\par
# but keep track of directories ending in .cache\par
\par
# Others\par
\par
# Including strong name files can present a security risk\par
# ({{\field{\*\fldinst{HYPERLINK https://github.com/github/gitignore/pull/2483#issue-259490424 }}{\fldrslt{https://github.com/github/gitignore/pull/2483#issue-259490424\ul0\cf0}}}}\f0\fs22 )\par
\par
# Since there are multiple workflows, uncomment next line to ignore bower_components\par
# ({{\field{\*\fldinst{HYPERLINK https://github.com/github/gitignore/pull/1529#issuecomment-104372622 }}{\fldrslt{https://github.com/github/gitignore/pull/1529#issuecomment-104372622\ul0\cf0}}}}\f0\fs22 )\par
\par
# RIA/Silverlight projects\par
\par
# Backup & report files from converting an old project file\par
# to a newer Visual Studio version. Backup files are not needed,\par
# because we have git ;-)\par
\par
# SQL Server files\par
\par
# Business Intelligence projects\par
\par
# Microsoft Fakes\par
\par
# GhostDoc plugin setting file\par
\par
# Node.js Tools for Visual Studio\par
\par
# Visual Studio 6 build log\par
\par
# Visual Studio 6 workspace options file\par
\par
# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)\par
\par
# Visual Studio 6 auto-generated project file (contains which files were open etc.)\par
\par
# Visual Studio 6 workspace and project file (working project files containing files to include in project)\par
\par
# Visual Studio 6 technical files\par
\par
# Visual Studio LightSwitch build output\par
\par
# Paket dependency manager\par
\par
# FAKE - F# Make\par
\par
# CodeRush personal settings\par
\par
# Python Tools for Visual Studio (PTVS)\par
\par
# Cake - Uncomment if you are using it\par
# tools/**\par
# !tools/packages.config\par
\par
# Tabs Studio\par
\par
# Telerik's JustMock configuration file\par
\par
# BizTalk build output\par
\par
# OpenCover UI analysis results\par
\par
# Azure Stream Analytics local run output\par
\par
# MSBuild Binary and Structured Log\par
\par
# NVidia Nsight GPU debugger configuration file\par
\par
# MFractors (Xamarin productivity tool) working folder\par
\par
# Local History for Visual Studio\par
\par
# Visual Studio History (VSHistory) files\par
\par
# BeatPulse healthcheck temp database\par
\par
# Backup folder for Package Reference Convert tool in Visual Studio 2017\par
\par
# Ionide (cross platform F# VS Code tools) working folder\par
\par
# Fody - auto-generated XML schema\par
\par
# VS Code files for those working on multiple tools\par
\par
# Local History for Visual Studio Code\par
\par
# Windows Installer files from build outputs\par
\par
# JetBrains Rider\par
\par
### VisualStudio Patch ###\par
# Additional files built by Visual Studio\par
\par
# End of {{\field{\*\fldinst{HYPERLINK https://www.toptal.com/developers/gitignore/api/react,csharp,visualstudio,visualstudiocode,node }}{\fldrslt{https://www.toptal.com/developers/gitignore/api/react,csharp,visualstudio,visualstudiocode,node\ul0\cf0}}}}\f0\fs22\par
